import time
import keyboard
import mouse

# Platzhalterfunktionen für das Spiel

def get_enemies():
    """Gibt eine Liste aller Gegner zurück."""
    return []  # Hier sollte die echte Spiellogik integriert werden

def get_player_position():
    """Gibt die aktuelle Position des Spielers zurück."""
    return (0, 0, 0)  # Beispielkoordinaten

def aim_at(target):
    """Setzt das Fadenkreuz auf das Ziel."""
    pass  # Hier sollte die echte Aimlogik stehen

def shoot():
    """Feuert eine Kugel ab."""
    mouse.click('left')

def is_enemy_on_crosshair():
    """Prüft, ob ein Gegner auf dem Fadenkreuz ist."""
    return True  # Diese Logik muss angepasst werden

def teleport_bullet_to_head(target):
    """Teleportiert die Kugel direkt auf den Kopf des Gegners und verursacht Schaden."""
    if target:
        target.take_damage(100)  # Fügt Schaden zu, anstatt einfach die Gesundheit auf 0 zu setzen

def get_closest_enemy():
    enemies = get_enemies()
    valid_targets = [e for e in enemies if e.health > 1]
    if valid_targets:
        return min(valid_targets, key=lambda e: distance_to_player(e))
    return None

# Globale Variablen
aimlock_enabled = False
current_target = None

def toggle_aimlock():
    global aimlock_enabled, current_target
    aimlock_enabled = not aimlock_enabled
    if aimlock_enabled:
        current_target = get_closest_enemy()

def switch_target():
    global current_target
    enemies = get_enemies()
    valid_targets = [e for e in enemies if e.health > 1]
    if valid_targets:
        current_index = valid_targets.index(current_target) if current_target in valid_targets else -1
        current_target = valid_targets[(current_index + 1) % len(valid_targets)]

def distance_to_player(enemy):
    px, py, pz = get_player_position()
    ex, ey, ez = enemy.position
    return ((px - ex) ** 2 + (py - ey) ** 2 + (pz - ez) ** 2) ** 0.5

def aimlock_loop():
    while True:
        if aimlock_enabled and current_target:
            aim_at(current_target)
            if is_enemy_on_crosshair():
                shoot()
                teleport_bullet_to_head(current_target)
        time.sleep(0.01)

keyboard.add_hotkey('q', toggle_aimlock)
keyboard.add_hotkey('mouse button 4', switch_target)

if __name__ == "__main__":
    aimlock_loop()
